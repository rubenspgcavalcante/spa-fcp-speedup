{"version":3,"sources":["webpack://my-webpack-project/./src/commons/components/Card.jsx","webpack://my-webpack-project/./src/pages/About.jsx"],"names":["Card","styled","theme","background","primary","FlexGrid","Loader","LoadingDots","DoggoCard","Doggo","iterable","Array","map","_","idx","id","About","useState","pics","setPics","useEffect","Promise","all","fetch","then","res","json","url","message","urls","key","src","memo"],"mappings":"6IAEO,I,IAAMA,E,OAAOC,MAAH,I,EAAA,2G,kBAAA,E,2EACK,qBAAGC,MAAkBC,WAAWC,Y,mmBCEtD,I,EAAMC,EAAWJ,QAAH,wDAKRK,GAASL,OAAOM,IAAPN,CAAH,oCAINO,GAAYP,OAAOD,IAAPC,CAAH,+HASTQ,EAAQR,QAAH,0DAOLS,G,EAAe,IAAIC,MADF,I,uVACyBC,KAAI,SAACC,EAAGC,GAAJ,MAAa,CAAEC,GAAID,MAEjEE,EAAQ,WACZ,M,+iBAAA,EAAwBC,cAASP,GAAjC,GAAOQ,EAAP,KAAaC,EAAb,KAYA,OAVAC,gBAAU,WACRC,QACGC,IAAIZ,EAASE,KAAI,gBAAGG,EAAH,EAAGA,GAAH,OAChBQ,MAVO,2CAWJC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,MAAK,CAAEV,KAAIY,IAAKF,EAAIG,gBAEhCJ,MAAK,SAAAK,GAAI,OAAIV,EAAQU,QACvB,IAGD,gBAACxB,EAAD,KACGa,EAAKN,KAAI,gBAAGG,EAAH,EAAGA,GAAIY,EAAP,EAAOA,IAAP,OACR,gBAACnB,EAAD,CAAWsB,IAAKf,GACdY,EAAM,gBAAClB,EAAD,CAAOsB,IAAKJ,IAAU,gBAACrB,EAAD,YAQtC,SAAe0B,UAAKhB","file":"796.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Card = styled.div`\n  background-color: ${({ theme }) => theme.background.primary};\n  border-radius: 6px;\n  box-shadow: 2px 2px 4px #ccc;\n  padding: 32px;\n`;","import React, { memo, useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport { Card } from '../commons/components/Card';\nimport LoadingDots from '../commons/components/LoadingDots';\n\nconst FlexGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Loader = styled(LoadingDots)`\n  padding: 32px;\n`;\n\nconst DoggoCard = styled(Card)`\n  margin: 6px;\n  width: 300px;\n  padding: 8px;\n  display: flex;\n  align-items: center;\n  height: auto;\n`;\n\nconst Doggo = styled.img`\n  width: 300px;\n  border-radius: 8px;\n`\n\nconst dogApi = 'https://dog.ceo/api/breeds/image/random';\nconst PICS_PER_BLOCK = 10;\nconst iterable = [...new Array(PICS_PER_BLOCK)].map((_, idx) => ({ id: idx }));\n\nconst About = () => {\n  const [pics, setPics] = useState(iterable);\n\n  useEffect(() => {\n    Promise\n      .all(iterable.map(({ id }) =>\n        fetch(dogApi)\n          .then(res => res.json())\n          .then(res => ({ id, url: res.message }))\n      ))\n      .then(urls => setPics(urls))\n  }, []);\n\n  return (\n    <FlexGrid>\n      {pics.map(({ id, url }) => (\n        <DoggoCard key={id}>{\n          url ? <Doggo src={url} /> : <Loader />\n        }</DoggoCard>\n      )\n      )}\n    </FlexGrid>\n  )\n};\n\nexport default memo(About);"],"sourceRoot":""}